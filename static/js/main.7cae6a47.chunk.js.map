{"version":3,"sources":["modules/firestore.js","components/theme.js","components/Login.js","components/Register.js","components/Onboard.js","components/Practice_Sidebar.js","components/Practice_View.js","components/HomePage.js","App.js","serviceWorker.js","modules/reducer.js","index.js","modules/store.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","createMuiTheme","palette","primary","red","secondary","brown","style","margin","Login","props","handleClickShowPassword","setState","showPassword","state","handleMouseDownPassword","event","preventDefault","username","password","handleChange","bind","handleSubmit","document","addEventListener","k","keyCode","getElementById","click","target","id","this","value","collection","where","toLowerCase","get","then","querySnapshot","data","docs","map","doc","length","bcrypt","compareSync","updateAuth","player_id","updateAdmin","admin","console","log","ThemeProvider","theme","Grid","container","alignItems","justify","item","xs","md","TextField","label","onChange","variant","fullWidth","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","aria-label","onClick","onMouseDown","Button","size","color","Component","connect","dispatch","payload","Register","email","first_name","last_name","chck_chaser","chck_beater","chck_keeper","chck_seeker","checked","e","player","positions","chaser","beater","keeper","seeker","practices","comments","add","user","hashSync","FormControlLabel","control","Checkbox","Onboard","loginscreen","loginmessage","buttonLabel","isLogin","handleSwitch","push","key","AppBar","Toolbar","Typography","Practices","p","accepted","includes","denied","isAccepted","newPractice","isDenied","_","remove","set","cloneDeep","updatePractices","forceUpdate","upcomming_prac","filter","expired","past_prac","reverse","events","genPracticeItem","Divider","ListItem","button","setOpenPractice","ListItemAvatar","Avatar","width","height","day","ListItemText","location","start","end","marginLeft","ListItemSecondaryAction","Fragment","marginRight","acceptPractice","denyPractice","admin_mode","List","addPractice","loadPractices","blank_practice","Number","getToday","split","today","Date","getFullYear","getMonth","getDate","practice","date","time","newPractices","newPrac","sort","item1","item2","getPracticeMilli","storePractices","parse","open_practice","indexFromId","prac","Card","CardHeader","avatar","getAvatar","action","title","getTitle","subheader","getSubHeader","CardContent","marginBottom","format","defaultValue","InputLabelProps","shrink","inputProps","step","HomePage","window","innerWidth","innerHeight","updateWindowDimensions","now","removeEventListener","small_mode","view","logout","setupPage","App","authenticated","Boolean","hostname","match","initialState","sCubeReducer","newState","reduxStore","REDUX_INITIAL_DATA","createStore","reducer","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cae6a47.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport firestore from 'firebase/firestore'; // eslint-disable-line no-unused-vars\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBpqnQ8cxhPbRoN49bsEfy9oFnK-HG9Fgw\",\r\n    authDomain: \"rpi-quidditch.firebaseapp.com\",\r\n    databaseURL: \"https://rpi-quidditch.firebaseio.com\",\r\n    projectId: \"rpi-quidditch\",\r\n    storageBucket: \"rpi-quidditch.appspot.com\",\r\n    messagingSenderId: \"1051970990113\",\r\n    appId: \"1:1051970990113:web:b79f5666c401f46b\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.firestore();\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport red from '@material-ui/core/colors/red';\r\nimport brown from '@material-ui/core/colors/brown';\r\n\r\nexport default createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: red,\r\n\t\tsecondary: brown,\r\n\t},\r\n});\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport firestore from \"../modules/firestore.js\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport theme from \"./theme.js\";\r\nvar style = {\r\n    margin: 15,\r\n};\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n\t\t\tshowPassword: false\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //When the enter key is pressed while on the login page\r\n        //Process the login\r\n        document.addEventListener('keyup', (k) => {\r\n            if (k.keyCode === 13) {\r\n                k.preventDefault();\r\n                document.getElementById(\"login_button\").click();\r\n            }\r\n        })\r\n    }\r\n\r\n\thandleChange(event) {\r\n\t\tif (event.target.id === \"username\") {\r\n\t\t\tthis.setState({username: event.target.value})\r\n\t\t} else if (event.target.id === \"password\") {\r\n\t\t\tthis.setState({password: event.target.value})\r\n\t\t}\r\n\t}\r\n\r\n    handleSubmit(event) {\r\n        firestore.collection(\"users\").where(\"username\",\"==\",this.state.username.toLowerCase()).get()\r\n            .then(querySnapshot => {\r\n                const data = querySnapshot.docs.map(doc => doc.data());\r\n                if (data.length === 1) {\r\n                    if (bcrypt.compareSync(this.state.password, data[0].password)) {\r\n                        this.props.updateAuth(data[0].player_id);\r\n\t\t\t\t\t\tthis.props.updateAdmin(data[0].admin);\r\n                    } else {\r\n                        console.log('Bad Password');\r\n                    }\r\n                } else {\r\n                    console.log(\"Username not found\")\r\n                }\r\n            });\r\n    }\r\n\r\n\thandleClickShowPassword = () => {\r\n\t\tthis.setState({showPassword: !this.state.showPassword})\r\n\t};\r\n\r\n\thandleMouseDownPassword = event => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item xs={6} md={4}>\r\n    \t\t\t\t<TextField\r\n    \t\t\t\t\tid=\"username\"\r\n    \t\t\t\t\tlabel=\"Username\"\r\n    \t\t\t\t\tvalue={this.state.username}\r\n    \t\t\t\t\tonChange={this.handleChange}\r\n    \t\t\t\t\tmargin=\"normal\"\r\n    \t\t\t\t\tvariant=\"outlined\"\r\n    \t\t\t\t\tfullWidth\r\n    \t\t\t\t/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item xs={6} md={4}>\r\n    \t\t\t\t<TextField\r\n    \t\t\t\t\tid=\"password\"\r\n    \t\t\t\t\tvariant=\"outlined\"\r\n    \t\t\t\t\ttype={this.state.showPassword ? 'text' : 'password'}\r\n    \t\t\t\t\tlabel=\"Password\"\r\n    \t\t\t\t\tvalue={this.state.password}\r\n    \t\t\t\t\tonChange={this.handleChange}\r\n    \t\t\t\t\tfullWidth\r\n    \t\t\t\t\tmargin=\"normal\"\r\n    \t\t\t\t\tInputProps={{\r\n    \t\t\t\t\t\tendAdornment: (\r\n    \t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n    \t\t\t\t\t\t\t\t<IconButton\r\n    \t\t\t\t\t\t\t\t\tedge=\"end\"\r\n    \t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n    \t\t\t\t\t\t\t\t\tonClick={this.handleClickShowPassword}\r\n    \t\t\t\t\t\t\t\t\tonMouseDown={this.handleMouseDownPassword}\r\n    \t\t\t\t\t\t\t\t>\r\n    \t\t\t\t\t\t\t\t\t{!this.state.showPassword ? <VisibilityOff/> : <Visibility />}\r\n    \t\t\t\t\t\t\t\t</IconButton>\r\n    \t\t\t\t\t\t\t</InputAdornment>\r\n    \t\t\t\t\t\t),\r\n    \t\t\t\t\t}}\r\n    \t\t\t\t/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item>\r\n\t                <Button id=\"login_button\" variant=\"contained\" size=\"large\" color=\"primary\" style={style} onClick={this.handleSubmit}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n                </Grid>\r\n\t\t\t</Grid>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateAuth: (id) => dispatch({\r\n        type: \"authenticate\",\r\n        payload: id\r\n    }),\r\n\tupdateAdmin: (admin) => dispatch({\r\n        type: \"set_admin\",\r\n        payload: admin\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport firestore from \"../modules/firestore.js\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\nimport theme from \"./theme.js\";\r\nvar style = {\r\n    margin: 15,\r\n};\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n\t\t\tchck_chaser: false,\r\n\t\t\tchck_beater: false,\r\n\t\t\tchck_keeper: false,\r\n\t\t\tchck_seeker: false,\r\n        };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\thandleChange(event) {\r\n\t\tif (event.target.id === \"username\") {\r\n\t\t\tthis.setState({username: event.target.value})\r\n\t\t} else if (event.target.id === \"password\") {\r\n\t\t\tthis.setState({password: event.target.value})\r\n\t\t} else if (event.target.id === \"email\") {\r\n\t\t\tthis.setState({email: event.target.value})\r\n\t\t}  else if (event.target.id === \"first_name\") {\r\n\t\t\tthis.setState({first_name: event.target.value})\r\n\t\t}  else if (event.target.id === \"last_name\") {\r\n\t\t\tthis.setState({last_name: event.target.value})\r\n\t\t}  else if (event.target.id === \"chck_chaser\") {\r\n\t\t\tthis.setState({chck_chaser: event.target.checked})\r\n\t\t}  else if (event.target.id === \"chck_beater\") {\r\n\t\t\tthis.setState({chck_beater: event.target.checked})\r\n\t\t}  else if (event.target.id === \"chck_keeper\") {\r\n\t\t\tthis.setState({chck_keeper: event.target.checked})\r\n\t\t}  else if (event.target.id === \"chck_seeker\") {\r\n\t\t\tthis.setState({chck_seeker: event.target.checked})\r\n\t\t}\r\n\t}\r\n\r\n    handleSubmit(e) {\r\n        console.log(\"Registering\")\r\n        firestore.collection(\"users\").where(\"username\",\"==\",this.state.username).get()\r\n            .then(querySnapshot => {\r\n                const data = querySnapshot.docs.map(doc => doc.data());\r\n                console.log(data);\r\n                if (data.length === 1) {\r\n                    console.log(\"Username already exists\")\r\n                } else {\r\n                    console.log(\"Username is avaliable\")\r\n                    let player = {\r\n                        first_name: this.state.first_name,\r\n                        last_name: this.state.last_name,\r\n\t\t\t\t\t\tpositions: {\r\n\t\t\t\t\t\t\tchaser: this.state.chck_chaser,\r\n\t\t\t\t\t\t\tbeater: this.state.chck_beater,\r\n\t\t\t\t\t\t\tkeeper: this.state.chck_keeper,\r\n\t\t\t\t\t\t\tseeker: this.state.chck_seeker,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tpractices: null,\r\n\t\t\t\t\t\tcomments: null\r\n                    }\r\n                    firestore.collection(\"players\").add(player)\r\n                    .then(item => {\r\n                        item.get().then(data => {\r\n                            let user = {\r\n                                email: this.state.email,\r\n                                username: this.state.username.toLowerCase(),\r\n                                password: bcrypt.hashSync(this.state.password, 10),\r\n                                player_id: data.id,\r\n\t\t\t\t\t\t\t\tadmin: false\r\n                            }\r\n                            firestore.collection(\"users\").add(user);\r\n\t\t\t\t\t\t\tthis.props.updateAuth(data.id);\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n\thandleClickShowPassword = () => {\r\n\t\tthis.setState({showPassword: !this.state.showPassword})\r\n\t};\r\n\r\n\thandleMouseDownPassword = event => {\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n    render() {\r\n        return (\r\n        <ThemeProvider theme={theme}>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"first_name\"\r\n\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"last_name\"\r\n\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n            <div>\r\n    \t\t\t<FormControlLabel\r\n    \t\t\t\tlabel=\"Chaser\"\r\n    \t\t\t\tcontrol={\r\n    \t\t\t\t\t<Checkbox\r\n    \t\t\t\t\t\tchecked={this.state.chck_chaser}\r\n    \t\t\t\t\t\tonChange={this.handleChange}\r\n    \t\t\t\t\t\tcolor=\"primary\"\r\n    \t\t\t\t\t\tid = \"chck_chaser\"\r\n    \t\t\t\t\t/>\r\n    \t\t\t\t}\r\n    \t\t\t/>\r\n    \t\t\t<FormControlLabel\r\n    \t\t\t\tlabel=\"Beater\"\r\n    \t\t\t\tcontrol={\r\n    \t\t\t\t\t<Checkbox\r\n    \t\t\t\t\t\tchecked={this.state.chck_beater}\r\n    \t\t\t\t\t\tonChange={this.handleChange}\r\n    \t\t\t\t\t\tcolor=\"primary\"\r\n    \t\t\t\t\t\tid = \"chck_beater\"\r\n    \t\t\t\t\t/>\r\n    \t\t\t\t}\r\n    \t\t\t/>\r\n    \t\t\t<FormControlLabel\r\n    \t\t\t\tlabel=\"Keeper\"\r\n    \t\t\t\tcontrol={\r\n    \t\t\t\t\t<Checkbox\r\n    \t\t\t\t\t\tchecked={this.state.chck_keeper}\r\n    \t\t\t\t\t\tonChange={this.handleChange}\r\n    \t\t\t\t\t\tcolor=\"primary\"\r\n    \t\t\t\t\t\tid = \"chck_keeper\"\r\n    \t\t\t\t\t/>\r\n    \t\t\t\t}\r\n    \t\t\t/>\r\n    \t\t\t<FormControlLabel\r\n    \t\t\t\tlabel=\"Seeker\"\r\n    \t\t\t\tcontrol={\r\n    \t\t\t\t\t<Checkbox\r\n    \t\t\t\t\t\tchecked={this.state.chck_seeker}\r\n    \t\t\t\t\t\tonChange={this.handleChange}\r\n    \t\t\t\t\t\tcolor=\"primary\"\r\n    \t\t\t\t\t\tid = \"chck_seeker\"\r\n    \t\t\t\t\t/>\r\n    \t\t\t\t}\r\n    \t\t\t/>\r\n            </div>\r\n            <TextField\r\n\t\t\t\tid=\"email\"\r\n\t\t\t\tlabel=\"Email\"\r\n\t\t\t\tvalue={this.state.email}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"username\"\r\n\t\t\t\tlabel=\"Username\"\r\n\t\t\t\tvalue={this.state.username}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"password\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\ttype={this.state.showPassword ? 'text' : 'password'}\r\n\t\t\t\tlabel=\"Password\"\r\n\t\t\t\tvalue={this.state.password}\r\n\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\tmargin=\"normal\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tInputProps={{\r\n\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tedge=\"end\"\r\n\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\r\n\t\t\t\t\t\t\t\tonClick={this.handleClickShowPassword}\r\n\t\t\t\t\t\t\t\tonMouseDown={this.handleMouseDownPassword}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{!this.state.showPassword ? <VisibilityOff/> : <Visibility />}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t),\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<Button variant=\"contained\" size=\"large\" color=\"primary\" style={style} onClick={this.handleSubmit}>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n         </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tupdateAuth: (id) => dispatch({\r\n        type: \"authenticate\",\r\n        payload: id\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Login from './Login.js';\r\nimport Register from './Register.js';\r\n\r\nimport theme from \"./theme.js\";\r\nconst style = {\r\n    margin: 15,\r\n};\r\n\r\nclass Onboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username:'',\r\n            password:'',\r\n            loginscreen:[],\r\n            loginmessage:'',\r\n            buttonLabel:'Set-up a new account',\r\n            isLogin:true\r\n        };\r\n        this.handleSwitch = this.handleSwitch.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        var loginscreen=[];\r\n        loginscreen.push(<Login key=\"login\"/>);\r\n        var loginmessage = \"Not registered yet, Register Now\";\r\n        this.setState({\r\n            loginscreen:loginscreen,\r\n            loginmessage:loginmessage\r\n        });\r\n    }\r\n\r\n    handleSwitch() {\r\n        // console.log(\"event\",event);\r\n        var loginmessage;\r\n\t\tvar loginscreen=[];\r\n        if(this.state.isLogin){\r\n            loginscreen.push(<Register key=\"register\"/>);\r\n            loginmessage = \"Already registered.Go to Login\";\r\n            this.setState({\r\n                loginscreen:loginscreen,\r\n                loginmessage:loginmessage,\r\n                buttonLabel:\"Already have an account?\",\r\n                isLogin:false\r\n            })\r\n        }\r\n        else{\r\n            loginscreen.push(<Login key=\"login\"/>);\r\n            loginmessage = \"Not Registered yet.Go to registration\";\r\n            this.setState({\r\n                loginscreen:loginscreen,\r\n                loginmessage:loginmessage,\r\n                buttonLabel:\"Set-up a new account\",\r\n                isLogin:true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{this.state.isLogin ? \"Login\" : \"Register\"}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<Grid container>\r\n\t\t\t\t\t<Grid item xs={true}></Grid>\r\n\t\t\t\t\t<Grid item xs={9}>\r\n\t\t\t\t\t{this.state.loginscreen}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={true}></Grid>\r\n\t\t\t\t</Grid>\r\n                <div>\r\n                    {this.state.loginmessage}\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" style={style} onClick={this.handleSwitch}>\r\n\t\t\t\t\t\t{this.state.buttonLabel}\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Onboard);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport firestore from \"../modules/firestore.js\";\r\nimport _ from \"lodash\";\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport UpVote from '@material-ui/icons/ThumbUp';\r\nimport DownVote from '@material-ui/icons/ThumbDown';\r\n\r\nimport theme from \"./theme.js\";\r\n\r\nclass Practices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    isAccepted(id) {\r\n        for (let p in this.props.practices) {\r\n            if (this.props.practices[p].id !== id) continue;\r\n            if (!this.props.practices[p].accepted) continue;\r\n            if (this.props.practices[p].accepted.includes(this.props.player_id)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isDenied(id) {\r\n        for (let p in this.props.practices) {\r\n            if (this.props.practices[p].id !== id) continue;\r\n            if (!this.props.practices[p].denied) continue;\r\n            if (this.props.practices[p].denied.includes(this.props.player_id)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    acceptPractice(id) {\r\n        if (!id) return null;\r\n        if (this.isAccepted(id)) return null;\r\n        firestore.collection(\"practices\").doc(id).get().then(doc => {\r\n            let newPractice = doc.data();\r\n            newPractice.accepted.push(this.props.player_id);\r\n            if (this.isDenied(id)) {\r\n                newPractice.denied = _.remove(newPractice.denied, item => {\r\n                    return item === id;\r\n                });\r\n            }\r\n            firestore.collection(\"practices\").doc(id).set(newPractice);\r\n\r\n            let practices = _.cloneDeep(this.props.practices);\r\n            for (let p in practices) {\r\n                if (practices[p].id === id) {\r\n                    practices[p] = newPractice;\r\n                    practices[p].id = id;\r\n                }\r\n            }\r\n            this.props.updatePractices(practices);\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    denyPractice(id) {\r\n        if (this.isDenied(id)) return null;\r\n        firestore.collection(\"practices\").doc(id).get().then(doc => {\r\n            let newPractice = doc.data();\r\n            newPractice.denied.push(this.props.player_id);\r\n            if (this.isAccepted(id)) {\r\n                newPractice.accepted = _.remove(newPractice.accepted, item => {\r\n                    return item === id;\r\n                });\r\n            }\r\n            firestore.collection(\"practices\").doc(id).set(newPractice);\r\n\r\n            let practices = _.cloneDeep(this.props.practices);\r\n            for (let p in practices) {\r\n                if (practices[p].id === id) {\r\n                    practices[p] = newPractice;\r\n                    practices[p].id = id;\r\n                }\r\n            }\r\n            this.props.updatePractices(practices);\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    loadPractices() {\r\n        if (!this.props.practices) return null;\r\n        let practices = this.props.practices;\r\n        let upcomming_prac = practices.filter(item => {\r\n            return !item.expired;\r\n        })\r\n        let past_prac = _.reverse(practices.filter(item => {\r\n            return item.expired;\r\n        }));\r\n\r\n        let events = []\r\n\r\n        for (let p in upcomming_prac) {\r\n            events.push(this.genPracticeItem(upcomming_prac[p]));\r\n        }\r\n        events.push(<Divider key=\"divider\"/>)\r\n        for (let p in past_prac) {\r\n            events.push(this.genPracticeItem(past_prac[p]));\r\n        }\r\n\r\n        return events;\r\n    }\r\n\r\n    genPracticeItem(item) {\r\n        return(\r\n            <ListItem button key={item.id} onClick={() => this.props.setOpenPractice(item.id)}>\r\n                <ListItemAvatar>\r\n                    <Avatar style={{width: \"60px\", height: \"60px\"}}>\r\n                    <Typography variant=\"h5\" style={{margin: \"10px\"}}>\r\n                        {item.day[0]+\"/\"+item.day[1]}\r\n                    </Typography>\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary = {item.location}\r\n                    secondary = {item.start[0]+\":\"+(item.start[1] < 10 ? \"0\"+item.start[1] : item.start[1])+(item.start[2] === item.end[2] ? \"\" : \" (\"+item.start[2]+\")\")+\" - \"+item.end[0]+\":\"+(item.end[1] < 10 ? \"0\"+item.end[1] : item.end[1])+\" (\"+item.end[2]+\")\"}\r\n                    style = {{marginLeft: \"20px\"}}\r\n                    />\r\n                <ListItemSecondaryAction>\r\n                    {!item.expired ? <React.Fragment>\r\n                        <IconButton edge=\"end\" style={{marginRight: \"10px\"}} color={this.isAccepted(item.id) ? \"primary\" : \"default\"} onClick={() => this.acceptPractice(item.id)}>\r\n                            <UpVote/>\r\n                        </IconButton>\r\n                        <IconButton edge=\"end\" style={{marginRight: \"10px\"}} color={this.isDenied(item.id) ? \"primary\" : \"default\"} onClick={() => this.denyPractice(item.id)}>\r\n                            <DownVote/>\r\n                        </IconButton>\r\n                    </React.Fragment> : null }\r\n                    {this.props.admin_mode ?\r\n                        <IconButton edge=\"end\">\r\n                            <EditIcon/>\r\n                        </IconButton>\r\n                    : null}\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <ThemeProvider theme={theme}>\r\n            <List>\r\n                <AppBar position=\"static\" color=\"secondary\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h5\" style={{margin: \"10px\"}}>\r\n                    Practices\r\n                    </Typography>\r\n                    {this.props.admin_mode ?\r\n                        <IconButton style={{marginLeft: \"auto\"}} onClick={() => this.props.addPractice()}>\r\n                            <AddBox/>\r\n                        </IconButton>\r\n                    : <div/>}\r\n                </Toolbar>\r\n                </AppBar>\r\n                <Divider/>\r\n                {this.loadPractices()}\r\n            </List>\r\n            </ThemeProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin_mode: state.admin_mode,\r\n    practices: state.practices,\r\n    player_id: state.player_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updatePractices: (practices) => dispatch({\r\n        type: \"update_practices\",\r\n        payload: practices\r\n    }),\r\n    setOpenPractice: (id) => dispatch({\r\n        type: \"set_open_practice\",\r\n        payload: id\r\n    }),\r\n    addPractice: () => dispatch({\r\n        type: \"set_open_practice\",\r\n        payload: \"add\"\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Practices);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport firestore from \"../modules/firestore.js\";\r\nimport _ from \"lodash\";\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport theme from \"./theme.js\";\r\n\r\nconst blank_practice = {\r\n    location: \"\",\r\n    day: [Number(getToday().split(\"-\")[1]), Number(getToday().split(\"-\")[2]), Number(getToday().split(\"-\")[0])],\r\n    start: [6,0,\"PM\"],\r\n    end: [8,0,\"PM\"],\r\n    accepted: [],\r\n    denied: []\r\n};\r\n\r\nfunction getToday() {\r\n    let today = new Date();\r\n    return today.getFullYear()+\"-\"+(today.getMonth()+1 < 9 ? \"0\"+(today.getMonth()+1) : today.getMonth()+1)+\"-\"+today.getDate();\r\n}\r\n\r\nclass Practices extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            practice: blank_practice,\r\n            id: \"\"\r\n        };\r\n        console.log(this.state)\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        if (event.target.id === \"day\") {\r\n            let date = event.target.value.split(\"-\");\r\n            this.setState({practice: {...this.state.practice,\r\n                day: [Number(date[1]), Number(date[2]), Number(date[0])]\r\n            }});\r\n        } else if (event.target.id === \"location\") {\r\n            this.setState({practice: {...this.state.practice, location: event.target.value}});\r\n        } else if (event.target.id === \"start_time\") {\r\n            let time = event.target.value.split(\":\");\r\n            this.setState({practice: {...this.state.practice, start: [\r\n                (time[0] <= 12 ? Number(time[0]) : Number(time[0])-12),\r\n                Number(time[1]),\r\n                (time[0] < 12 ? \"AM\" : \"PM\")\r\n            ]}});\r\n        } else if (event.target.id === \"end_time\") {\r\n            let time = event.target.value.split(\":\");\r\n            this.setState({practice: {...this.state.practice, end: [\r\n                (time[0] <= 12 ? Number(time[0]) : Number(time[0])-12),\r\n                Number(time[1]),\r\n                (time[0] < 12 ? \"AM\" : \"PM\")\r\n            ]}});\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        firestore.collection(\"practices\").add(this.state.practice)\r\n        .then(item => {\r\n            console.log(item.id);\r\n            this.setState({id: item.id});\r\n        }).then((item) => {\r\n            let newPractices = _.cloneDeep(this.props.practices);\r\n            let newPrac = _.cloneDeep(this.state.practice);\r\n            newPrac.id = this.state.id;\r\n            newPractices.push(newPrac);\r\n            newPractices.sort((item1, item2) => {\r\n                if (this.getPracticeMilli(item1.day, item1.start) > this.getPracticeMilli(item2.day, item2.start)) {\r\n                    return 1;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            });\r\n            this.props.storePractices(newPractices);\r\n            this.props.setOpenPractice(this.state.id);\r\n        });\r\n    }\r\n\r\n    getPracticeMilli(day, start) {\r\n        let date = day[0]+\"/\"+day[1]+\"/\"+day[2];\r\n        let time = start[0]+\":\"+start[1]+\" \"+start[2];\r\n        return Date.parse(date+\" \"+time);\r\n    }\r\n\r\n    indexFromId(id) {\r\n        if (!this.props.practices) return -1;\r\n        for (let p in this.props.practices) {\r\n            if (this.props.practices[p].id === id) return p;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    getTitle() {\r\n        if (this.props.open_practice === \"add\") {\r\n            return this.state.practice.location;\r\n        }\r\n\r\n        if (!this.props.practices) return \"...\";\r\n        if (!this.props.open_practice) return \"...\";\r\n        if (!this.props.practices[this.indexFromId(this.props.open_practice)]) return \"...\";\r\n        let prac = this.props.practices[this.indexFromId(this.props.open_practice)];\r\n        return prac.location;\r\n    }\r\n\r\n    getSubHeader() {\r\n        if (this.props.open_practice === \"add\") {\r\n            let prac = this.state.practice;\r\n            return prac.start[0]+\":\"+(prac.start[1] < 10 ? \"0\"+prac.start[1] : prac.start[1])\r\n                    +(prac.start[2] === prac.end[2] ? \"\" : \" (\"+prac.start[2]+\")\")\r\n                    +\" - \"+prac.end[0]+\":\"+(prac.end[1] < 10 ? \"0\"+prac.end[1] : prac.end[1])\r\n                    +\" (\"+prac.end[2]+\")\";\r\n        }\r\n\r\n        if (!this.props.practices) return null;\r\n        if (!this.props.open_practice) return null;\r\n        if (!this.props.practices[this.indexFromId(this.props.open_practice)]) return null;\r\n        let prac = this.props.practices[this.indexFromId(this.props.open_practice)];\r\n        return prac.start[0]+\":\"+(prac.start[1] < 10 ? \"0\"+prac.start[1] : prac.start[1])\r\n                +(prac.start[2] === prac.end[2] ? \"\" : \" (\"+prac.start[2]+\")\")\r\n                +\" - \"+prac.end[0]+\":\"+(prac.end[1] < 10 ? \"0\"+prac.end[1] : prac.end[1])\r\n                +\" (\"+prac.end[2]+\")\";\r\n    }\r\n\r\n    getAvatar() {\r\n        if (this.props.open_practice === \"add\") {\r\n            let prac = this.state.practice;\r\n            return prac.day[0]+\"/\"+prac.day[1];\r\n        }\r\n\r\n        if (!this.props.practices) return \"...\";\r\n        if (!this.props.open_practice) return \"...\";\r\n        if (!this.props.practices[this.indexFromId(this.props.open_practice)]) return \"...\";\r\n        let prac = this.props.practices[this.indexFromId(this.props.open_practice)];\r\n        return prac.day[0]+\"/\"+prac.day[1];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <ThemeProvider theme={theme}>\r\n            <Card>\r\n                <CardHeader\r\n                    avatar={\r\n                      <Avatar style={{width: \"60px\", height: \"60px\"}}>\r\n                        <Typography variant=\"h5\" style={{margin: \"10px\"}}>\r\n                            {this.getAvatar()}\r\n                        </Typography>\r\n                      </Avatar>\r\n                    }\r\n                    action={ this.props.admin_mode ?\r\n                      <IconButton aria-label=\"settings\">\r\n                        <EditIcon />\r\n                      </IconButton> : null\r\n                    }\r\n                    title = {this.getTitle()}\r\n                    subheader = {this.getSubHeader()}\r\n                />\r\n                {this.props.admin_mode && this.props.open_practice === \"add\" ?\r\n                <div>\r\n                    <Divider style={{margin: \"10px\"}}/>\r\n                    <CardContent>\r\n                    <Grid container>\r\n                        <TextField\r\n                            id=\"location\"\r\n                            label=\"Location\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange}\r\n                            style={{marginBottom:\"20px\"}}\r\n                        />\r\n                        <TextField\r\n                            id=\"day\"\r\n                            label=\"Day\"\r\n                            type=\"date\"\r\n                            format=\"MM/dd/yyyy\"\r\n                            defaultValue={getToday()}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            inputProps={{\r\n                                step: 900, // 15 min\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{marginLeft:\"10px\", marginBottom:\"20px\"}}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            id=\"start_time\"\r\n                            label=\"Start Time\"\r\n                            type=\"time\"\r\n                            defaultValue=\"18:00\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            inputProps={{\r\n                                step: 900, // 15 min\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{marginLeft:\"10px\", marginBottom:\"20px\"}}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            id=\"end_time\"\r\n                            label=\"End Time\"\r\n                            type=\"time\"\r\n                            defaultValue=\"20:00\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            inputProps={{\r\n                                step: 900, // 15 min\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{marginLeft:\"10px\", marginBottom:\"20px\"}}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button variant=\"contained\" size=\"large\" color=\"primary\" style={{marginLeft:\"10px\"}} onClick={this.handleSubmit}>\r\n        \t\t\t\t\tAdd Practice\r\n        \t\t\t\t</Button>\r\n                    </Grid>\r\n                    </CardContent>\r\n                </div> : null }\r\n            </Card>\r\n            </ThemeProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    practices: state.practices,\r\n    open_practice: state.open_practice,\r\n    admin_mode: state.admin_mode,\r\n\tplayer_id: state.player_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tstorePractices: (practices) => dispatch({\r\n        type: \"update_practices\",\r\n        payload: practices\r\n    }),\r\n    setOpenPractice: (id) => dispatch({\r\n        type: \"set_open_practice\",\r\n        payload: id\r\n    }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Practices);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport firestore from \"../modules/firestore.js\";\r\n\r\nimport Practices from \"./Practice_Sidebar.js\";\r\nimport View from \"./Practice_View.js\";\r\n\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Admin from '@material-ui/icons/VerifiedUser';\r\nimport LogoutIcon from '@material-ui/icons/PowerSettingsNew';\r\n\r\nimport theme from \"./theme.js\";\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n\r\n\t\t\tfirst_name: \"\",\r\n\t\t\tlast_name: \"\",\r\n        };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n\r\n        //Get the Player's Information\r\n        if (!this.props.player_id) return null;\r\n\t\tfirestore.collection(\"players\").doc(this.props.player_id).get()\r\n\t\t\t.then(doc => {\r\n\t\t\t\tthis.setState(doc.data());\r\n\t\t\t});\r\n\r\n        firestore.collection(\"practices\").get()\r\n\t\t\t.then(querySnapshot => {\r\n\t\t\t\tlet data = querySnapshot.docs.map(doc => {return {...doc.data(), id: doc.id}});\r\n                data = data.map(item => {\r\n                    item[\"expired\"] = Date.now() > this.getPracticeMilli(item.day, item.start);\r\n                    return item;\r\n                }).sort((item1, item2) => {\r\n                    if (this.getPracticeMilli(item1.day, item1.start) > this.getPracticeMilli(item2.day, item2.start)) {\r\n                        return 1;\r\n                    } else {\r\n                        return -1;\r\n                    }\r\n                });\r\n\t\t\t\tthis.props.storePractices(data);\r\n                if (data.length > 0) {\r\n                    this.props.setOpenPractice(data[0].id);\r\n                } else {\r\n                    this.props.setOpenPractice(\"add\");\r\n                }\r\n\t\t\t});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    getPracticeMilli(day, start) {\r\n        let date = day[0]+\"/\"+day[1]+\"/\"+day[2];\r\n        let time = start[0]+\":\"+start[1]+\" \"+start[2];\r\n        return Date.parse(date+\" \"+time);\r\n    }\r\n\r\n    setupPage() {\r\n        let small_mode = this.state.width < 960;\r\n\r\n        let practices = (\r\n            <Grid item xs={small_mode ? 12 : 3} key=\"practices\">\r\n                <Practices/>\r\n            </Grid>\r\n        );\r\n\r\n        let view = (\r\n            <Grid item xs={small_mode ? 12 : 9} key=\"view\">\r\n                <View/>\r\n            </Grid>\r\n        );\r\n\r\n        if (small_mode) {\r\n            return [view, practices];\r\n        } else {\r\n            return [practices, view];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n            <div>\r\n\t\t\t\t<AppBar position=\"static\">\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Typography variant=\"h4\">\r\n\t\t\t\t\t\t\tWelcome, {this.state.first_name}\r\n\t\t\t\t\t\t</Typography>\r\n                        {this.props.admin_mode ?\r\n                            <Admin/>\r\n                        : null}\r\n                        <IconButton edge=\"end\" onClick={() => this.props.logout()}style={{marginLeft: \"auto\"}}>\r\n                            <LogoutIcon/>\r\n                        </IconButton>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n            <Grid container>\r\n                {this.setupPage()}\r\n            </Grid>\r\n            </div>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    admin_mode: state.admin_mode,\r\n\tplayer_id: state.player_id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateAuth: () => dispatch({\r\n        type: \"authenticate\",\r\n        payload: null\r\n    }),\r\n    logout: () => dispatch({\r\n        type: \"logout\",\r\n        payload: null\r\n    }),\r\n    storePractices: (practices) => dispatch({\r\n        type: \"update_practices\",\r\n        payload: practices\r\n    }),\r\n    setOpenPractice: (id) => dispatch({\r\n        type: \"set_open_practice\",\r\n        payload: id\r\n    })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Onboard from \"./components/Onboard.js\";\r\nimport HomePage from \"./components/HomePage.js\"\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.props.authenticated ?\r\n            <div>\r\n                <HomePage/>\r\n            </div> : <div>\r\n                <Onboard/>\r\n            </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authenticated: state.authenticated\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from \"lodash\";\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n\tplayer_id: \"\",\r\n\tadmin_mode: false,\r\n    practices: null,\r\n    open_practice: 0\r\n};\r\n\r\nconst sCubeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"dump_store\": {\r\n        console.log(state);\r\n        return state;\r\n    }\r\n\r\n    case \"authenticate\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.authenticated = true;\r\n\t\tnewState.player_id = action.payload;\r\n        return newState;\r\n    }\r\n\r\n    case \"logout\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.authenticated = false;\r\n\t\tnewState.player_id = \"\";\r\n        return newState;\r\n    }\r\n\r\n\tcase \"set_admin\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.admin_mode = action.payload;\r\n        return newState;\r\n    }\r\n\r\n    case \"set_open_practice\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.open_practice = action.payload;\r\n        return newState;\r\n    }\r\n\r\n    case \"update_practices\": {\r\n        let newState = _.cloneDeep(state);\r\n        newState.practices = action.payload;\r\n        return newState;\r\n    }\r\n\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport default sCubeReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./modules/store\";\n\nconst reduxStore = configureStore(window.REDUX_INITIAL_DATA);\n\nReactDOM.render(<ReduxProvider store={reduxStore}><App /></ReduxProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore} from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nexport default function configureStore(initialState) {\r\n    const store = createStore(reducer, initialState);\r\n    return store;\r\n}\r\n"],"sourceRoot":""}